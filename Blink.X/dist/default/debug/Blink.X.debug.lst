

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 24 18:09:34 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    12   000000                     
    13                           ; Generated 17/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4550 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000000                     _LATB	set	3978
    48   000000                     _TRISB	set	3987
    49                           
    50                           ; #config settings
    51                           
    52                           	psect	cinit
    53   0008AE                     __pcinit:
    54                           	callstack 0
    55   0008AE                     start_initialization:
    56                           	callstack 0
    57   0008AE                     __initialization:
    58                           	callstack 0
    59   0008AE                     end_of_initialization:
    60                           	callstack 0
    61   0008AE                     __end_of__initialization:
    62                           	callstack 0
    63   0008AE  0100               	movlb	0
    64   0008B0  EF01  F004         	goto	_main	;jump to C main() function
    65                           
    66                           	psect	cstackCOMRAM
    67   000001                     __pcstackCOMRAM:
    68                           	callstack 0
    69   000001                     ??_main:
    70                           
    71                           ; 1 bytes @ 0x0
    72   000001                     	ds	2
    73   000003                     main@i:
    74                           	callstack 0
    75                           
    76                           ; 1 bytes @ 0x2
    77   000003                     	ds	1
    78   000004                     main@i_38:
    79                           	callstack 0
    80                           
    81                           ; 1 bytes @ 0x3
    82   000004                     	ds	1
    83                           
    84 ;;
    85 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    86 ;;
    87 ;; *************** function _main *****************
    88 ;; Defined at:
    89 ;;		line 7 in file "Blink.c"
    90 ;; Parameters:    Size  Location     Type
    91 ;;		None
    92 ;; Auto vars:     Size  Location     Type
    93 ;;  i               1    3[COMRAM] unsigned char 
    94 ;;  i               1    2[COMRAM] unsigned char 
    95 ;; Return value:  Size  Location     Type
    96 ;;                  1    wreg      void 
    97 ;; Registers used:
    98 ;;		wreg, status,2, status,0
    99 ;; Tracked objects:
   100 ;;		On entry : 0/0
   101 ;;		On exit  : 0/0
   102 ;;		Unchanged: 0/0
   103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   104 ;;      Params:         0       0       0       0       0       0       0       0       0
   105 ;;      Locals:         2       0       0       0       0       0       0       0       0
   106 ;;      Temps:          2       0       0       0       0       0       0       0       0
   107 ;;      Totals:         4       0       0       0       0       0       0       0       0
   108 ;;Total ram usage:        4 bytes
   109 ;; This function calls:
   110 ;;		Nothing
   111 ;; This function is called by:
   112 ;;		Startup code after reset
   113 ;; This function uses a non-reentrant model
   114 ;;
   115                           
   116                           	psect	text0
   117   000802                     __ptext0:
   118                           	callstack 0
   119   000802                     _main:
   120                           	callstack 31
   121   000802                     
   122                           ;Blink.c: 9:     TRISB = 0x00;
   123   000802  0E00               	movlw	0
   124   000804  6E93               	movwf	147,c	;volatile
   125                           
   126                           ;Blink.c: 12:     LATB = 0x00;
   127   000806  0E00               	movlw	0
   128   000808  6E8A               	movwf	138,c	;volatile
   129   00080A                     l11:
   130                           
   131                           ;Blink.c: 16:         for (uint8_t i = 0; i < 8; i++) {
   132   00080A  0E00               	movlw	0
   133   00080C  6E03               	movwf	main@i^0,c
   134   00080E                     l696:
   135   00080E  0E07               	movlw	7
   136   000810  6403               	cpfsgt	main@i^0,c
   137   000812  EF0D  F004         	goto	u11
   138   000816  EF0F  F004         	goto	u10
   139   00081A                     u11:
   140   00081A  EF11  F004         	goto	l700
   141   00081E                     u10:
   142   00081E  EF29  F004         	goto	l706
   143   000822                     l700:
   144                           
   145                           ;Blink.c: 17:             LATB = (1 << i);
   146   000822  C003  F001         	movff	main@i,??_main
   147   000826  0E01               	movlw	1
   148   000828  6E02               	movwf	(??_main+1)^0,c
   149   00082A  2A01               	incf	??_main^0,f,c
   150   00082C  EF1A  F004         	goto	u24
   151   000830                     u25:
   152   000830  90D8               	bcf	status,0,c
   153   000832  3602               	rlcf	(??_main+1)^0,f,c
   154   000834                     u24:
   155   000834  2E01               	decfsz	??_main^0,f,c
   156   000836  EF18  F004         	goto	u25
   157   00083A  5002               	movf	(??_main+1)^0,w,c
   158   00083C  6E8A               	movwf	138,c	;volatile
   159   00083E                     
   160                           ;Blink.c: 18:             _delay((unsigned long)((100)*(4000000UL/4000.0)));
   161   00083E  0E82               	movlw	130
   162   000840  6E01               	movwf	??_main^0,c
   163   000842  0EDE               	movlw	222
   164   000844                     u67:
   165   000844  2EE8               	decfsz	wreg,f,c
   166   000846  D7FE               	bra	u67
   167   000848  2E01               	decfsz	??_main^0,f,c
   168   00084A  D7FC               	bra	u67
   169                           
   170                           ;Blink.c: 19:         }
   171   00084C  2A03               	incf	main@i^0,f,c
   172   00084E  EF07  F004         	goto	l696
   173   000852                     l706:
   174                           
   175                           ;Blink.c: 21:         for (uint8_t i = 6; i > 0; i--) {
   176   000852  0E06               	movlw	6
   177   000854  6E04               	movwf	main@i_38^0,c
   178   000856  5004               	movf	main@i_38^0,w,c
   179   000858  A4D8               	btfss	status,2,c
   180   00085A  EF31  F004         	goto	u31
   181   00085E  EF33  F004         	goto	u30
   182   000862                     u31:
   183   000862  EF35  F004         	goto	l710
   184   000866                     u30:
   185   000866  EF05  F004         	goto	l11
   186   00086A                     l710:
   187                           
   188                           ;Blink.c: 22:             LATB = (1 << i);
   189   00086A  C004  F001         	movff	main@i_38,??_main
   190   00086E  0E01               	movlw	1
   191   000870  6E02               	movwf	(??_main+1)^0,c
   192   000872  2A01               	incf	??_main^0,f,c
   193   000874  EF3E  F004         	goto	u44
   194   000878                     u45:
   195   000878  90D8               	bcf	status,0,c
   196   00087A  3602               	rlcf	(??_main+1)^0,f,c
   197   00087C                     u44:
   198   00087C  2E01               	decfsz	??_main^0,f,c
   199   00087E  EF3C  F004         	goto	u45
   200   000882  5002               	movf	(??_main+1)^0,w,c
   201   000884  6E8A               	movwf	138,c	;volatile
   202   000886                     
   203                           ;Blink.c: 23:             _delay((unsigned long)((100)*(4000000UL/4000.0)));
   204   000886  0E82               	movlw	130
   205   000888  6E01               	movwf	??_main^0,c
   206   00088A  0EDE               	movlw	222
   207   00088C                     u77:
   208   00088C  2EE8               	decfsz	wreg,f,c
   209   00088E  D7FE               	bra	u77
   210   000890  2E01               	decfsz	??_main^0,f,c
   211   000892  D7FC               	bra	u77
   212                           
   213                           ;Blink.c: 24:         }
   214   000894  0604               	decf	main@i_38^0,f,c
   215   000896  5004               	movf	main@i_38^0,w,c
   216   000898  A4D8               	btfss	status,2,c
   217   00089A  EF51  F004         	goto	u51
   218   00089E  EF53  F004         	goto	u50
   219   0008A2                     u51:
   220   0008A2  EF35  F004         	goto	l710
   221   0008A6                     u50:
   222   0008A6  EF05  F004         	goto	l11
   223   0008AA  EF00  F000         	goto	start
   224   0008AE                     __end_of_main:
   225                           	callstack 0
   226                           
   227                           	psect	smallconst
   228   000800                     __psmallconst:
   229                           	callstack 0
   230   000800  00                 	db	0
   231   000801  00                 	db	0	; dummy byte at the end
   232   000000                     
   233                           	psect	rparam
   234   000000                     
   235                           	psect	config
   236                           
   237                           ;Config register CONFIG1L @ 0x300000
   238                           ;	PLL Prescaler Selection bits
   239                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   240                           ;	System Clock Postscaler Selection bits
   241                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   242                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   243                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   244   300000                     	org	3145728
   245   300000  00                 	db	0
   246                           
   247                           ;Config register CONFIG1H @ 0x300001
   248                           ;	Oscillator Selection bits
   249                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
   250                           ;	Fail-Safe Clock Monitor Enable bit
   251                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   252                           ;	Internal/External Oscillator Switchover bit
   253                           ;	IESO = OFF, Oscillator Switchover mode disabled
   254   300001                     	org	3145729
   255   300001  09                 	db	9
   256                           
   257                           ;Config register CONFIG2L @ 0x300002
   258                           ;	Power-up Timer Enable bit
   259                           ;	PWRT = ON, PWRT enabled
   260                           ;	Brown-out Reset Enable bits
   261                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   262                           ;	Brown-out Reset Voltage bits
   263                           ;	BORV = 3, Minimum setting 2.05V
   264                           ;	USB Voltage Regulator Enable bit
   265                           ;	VREGEN = OFF, USB voltage regulator disabled
   266   300002                     	org	3145730
   267   300002  18                 	db	24
   268                           
   269                           ;Config register CONFIG2H @ 0x300003
   270                           ;	Watchdog Timer Enable bit
   271                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   272                           ;	Watchdog Timer Postscale Select bits
   273                           ;	WDTPS = 32768, 1:32768
   274   300003                     	org	3145731
   275   300003  1E                 	db	30
   276                           
   277                           ; Padding undefined space
   278   300004                     	org	3145732
   279   300004  FF                 	db	255
   280                           
   281                           ;Config register CONFIG3H @ 0x300005
   282                           ;	CCP2 MUX bit
   283                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   284                           ;	PORTB A/D Enable bit
   285                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   286                           ;	Low-Power Timer 1 Oscillator Enable bit
   287                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   288                           ;	MCLR Pin Enable bit
   289                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   290   300005                     	org	3145733
   291   300005  01                 	db	1
   292                           
   293                           ;Config register CONFIG4L @ 0x300006
   294                           ;	Stack Full/Underflow Reset Enable bit
   295                           ;	STVREN = ON, Stack full/underflow will cause Reset
   296                           ;	Single-Supply ICSP Enable bit
   297                           ;	LVP = OFF, Single-Supply ICSP disabled
   298                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   299                           ;	ICPRT = OFF, ICPORT disabled
   300                           ;	Extended Instruction Set Enable bit
   301                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   302                           ;	Background Debugger Enable bit
   303                           ;	DEBUG = 0x1, unprogrammed default
   304   300006                     	org	3145734
   305   300006  81                 	db	129
   306                           
   307                           ; Padding undefined space
   308   300007                     	org	3145735
   309   300007  FF                 	db	255
   310                           
   311                           ;Config register CONFIG5L @ 0x300008
   312                           ;	Code Protection bit
   313                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   314                           ;	Code Protection bit
   315                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   316                           ;	Code Protection bit
   317                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   318                           ;	Code Protection bit
   319                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   320   300008                     	org	3145736
   321   300008  0F                 	db	15
   322                           
   323                           ;Config register CONFIG5H @ 0x300009
   324                           ;	Boot Block Code Protection bit
   325                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   326                           ;	Data EEPROM Code Protection bit
   327                           ;	CPD = OFF, Data EEPROM is not code-protected
   328   300009                     	org	3145737
   329   300009  C0                 	db	192
   330                           
   331                           ;Config register CONFIG6L @ 0x30000A
   332                           ;	Write Protection bit
   333                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   334                           ;	Write Protection bit
   335                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   336                           ;	Write Protection bit
   337                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   338                           ;	Write Protection bit
   339                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   340   30000A                     	org	3145738
   341   30000A  0F                 	db	15
   342                           
   343                           ;Config register CONFIG6H @ 0x30000B
   344                           ;	Configuration Register Write Protection bit
   345                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   346                           ;	Boot Block Write Protection bit
   347                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   348                           ;	Data EEPROM Write Protection bit
   349                           ;	WRTD = OFF, Data EEPROM is not write-protected
   350   30000B                     	org	3145739
   351   30000B  E0                 	db	224
   352                           
   353                           ;Config register CONFIG7L @ 0x30000C
   354                           ;	Table Read Protection bit
   355                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   356                           ;	Table Read Protection bit
   357                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   358                           ;	Table Read Protection bit
   359                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   360                           ;	Table Read Protection bit
   361                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   362   30000C                     	org	3145740
   363   30000C  0F                 	db	15
   364                           
   365                           ;Config register CONFIG7H @ 0x30000D
   366                           ;	Boot Block Table Read Protection bit
   367                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   368   30000D                     	org	3145741
   369   30000D  40                 	db	64
   370                           tosu	equ	0xFFF
   371                           tosh	equ	0xFFE
   372                           tosl	equ	0xFFD
   373                           stkptr	equ	0xFFC
   374                           pclatu	equ	0xFFB
   375                           pclath	equ	0xFFA
   376                           pcl	equ	0xFF9
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           prodh	equ	0xFF4
   382                           prodl	equ	0xFF3
   383                           indf0	equ	0xFEF
   384                           postinc0	equ	0xFEE
   385                           postdec0	equ	0xFED
   386                           preinc0	equ	0xFEC
   387                           plusw0	equ	0xFEB
   388                           fsr0h	equ	0xFEA
   389                           fsr0l	equ	0xFE9
   390                           wreg	equ	0xFE8
   391                           indf1	equ	0xFE7
   392                           postinc1	equ	0xFE6
   393                           postdec1	equ	0xFE5
   394                           preinc1	equ	0xFE4
   395                           plusw1	equ	0xFE3
   396                           fsr1h	equ	0xFE2
   397                           fsr1l	equ	0xFE1
   398                           bsr	equ	0xFE0
   399                           indf2	equ	0xFDF
   400                           postinc2	equ	0xFDE
   401                           postdec2	equ	0xFDD
   402                           preinc2	equ	0xFDC
   403                           plusw2	equ	0xFDB
   404                           fsr2h	equ	0xFDA
   405                           fsr2l	equ	0xFD9
   406                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      90
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      4       4       1        4.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
ABS                  0      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRh          6C      0       0      21        0.0%
BITBIGSFRlh          8      0       0      22        0.0%
BITBIGSFRll         2A      0       0      23        0.0%
BIGRAM             7FF      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 24 18:09:34 2024

                     l11 080A                       u10 081E                       u11 081A  
                     u30 0866                       u31 0862                       u24 0834  
                     u25 0830                       u50 08A6                       u51 08A2  
                     u44 087C                       u45 0878                       u67 0844  
                     u77 088C                      l700 0822                      l710 086A  
                    l702 083E                      l712 0886                      l714 0896  
                    l706 0852                      l694 0802                      l696 080E  
                    wreg 0FE8                     _LATB 0F8A                     _main 0802  
                   start 0000             ___param_bank 0000                    ?_main 0001  
                  _TRISB 0F93                    main@i 0003                    status 0FD8  
        __initialization 08AE             __end_of_main 08AE                   ??_main 0001  
          __activetblptr 0000                   isa$std 0001             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 08AE            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 08AE                  __ramtop 0800  
                __ptext0 0802     end_of_initialization 08AE      start_initialization 08AE  
            __smallconst 0800                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 0000                 main@i_38 0004  
