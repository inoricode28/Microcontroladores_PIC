

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 24 16:07:57 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 17/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53                           	psect	idataCOMRAM
    54   000AB0                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for MostrarCuentaDisplay@F3225
    58   000AB0  3F                 	db	63
    59   000AB1  06                 	db	6
    60   000AB2  5B                 	db	91
    61   000AB3  4F                 	db	79
    62   000AB4  66                 	db	102
    63   000AB5  6D                 	db	109
    64   000AB6  7D                 	db	125
    65   000AB7  07                 	db	7
    66   000AB8  7F                 	db	127
    67   000AB9  67                 	db	103
    68   000000                     _LATC	set	3979
    69   000000                     _TRISC	set	3988
    70   000000                     _TRISD	set	3989
    71   000000                     _OSCCON	set	4051
    72   000000                     _LATD	set	3980
    73                           
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77   000A86                     __pcinit:
    78                           	callstack 0
    79   000A86                     start_initialization:
    80                           	callstack 0
    81   000A86                     __initialization:
    82                           	callstack 0
    83                           
    84                           ; Initialize objects allocated to COMRAM (10 bytes)
    85                           ; load TBLPTR registers with __pidataCOMRAM
    86   000A86  0EB0               	movlw	low __pidataCOMRAM
    87   000A88  6EF6               	movwf	tblptrl,c
    88   000A8A  0E0A               	movlw	high __pidataCOMRAM
    89   000A8C  6EF7               	movwf	tblptrh,c
    90   000A8E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    91   000A90  6EF8               	movwf	tblptru,c
    92   000A92  EE00  F01A         	lfsr	0,__pdataCOMRAM
    93   000A96  EE10 F00A          	lfsr	1,10
    94   000A9A                     copy_data0:
    95   000A9A  0009               	tblrd		*+
    96   000A9C  CFF5 FFEE          	movff	tablat,postinc0
    97   000AA0  50E5               	movf	postdec1,w,c
    98   000AA2  50E1               	movf	fsr1l,w,c
    99   000AA4  E1FA               	bnz	copy_data0
   100   000AA6                     end_of_initialization:
   101                           	callstack 0
   102   000AA6                     __end_of__initialization:
   103                           	callstack 0
   104   000AA6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   105   000AA8  6EF8               	movwf	tblptru,c
   106   000AAA  0100               	movlb	0
   107   000AAC  EFBB  F004         	goto	_main	;jump to C main() function
   108                           
   109                           	psect	dataCOMRAM
   110   00001A                     __pdataCOMRAM:
   111                           	callstack 0
   112   00001A                     MostrarCuentaDisplay@F3225:
   113                           	callstack 0
   114   00001A                     	ds	10
   115                           
   116                           	psect	cstackCOMRAM
   117   000001                     __pcstackCOMRAM:
   118                           	callstack 0
   119   000001                     ?___awdiv:
   120                           	callstack 0
   121   000001                     ?___awmod:
   122                           	callstack 0
   123   000001                     ___awdiv@dividend:
   124                           	callstack 0
   125   000001                     ___awmod@dividend:
   126                           	callstack 0
   127                           
   128                           ; 2 bytes @ 0x0
   129   000001                     	ds	2
   130   000003                     ___awdiv@divisor:
   131                           	callstack 0
   132   000003                     ___awmod@divisor:
   133                           	callstack 0
   134                           
   135                           ; 2 bytes @ 0x2
   136   000003                     	ds	2
   137   000005                     ___awdiv@counter:
   138                           	callstack 0
   139   000005                     ___awmod@counter:
   140                           	callstack 0
   141                           
   142                           ; 1 bytes @ 0x4
   143   000005                     	ds	1
   144   000006                     ___awdiv@sign:
   145                           	callstack 0
   146   000006                     ___awmod@sign:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x5
   150   000006                     	ds	1
   151   000007                     ___awdiv@quotient:
   152                           	callstack 0
   153                           
   154                           ; 2 bytes @ 0x6
   155   000007                     	ds	2
   156   000009                     MostrarCuentaDisplay@cont:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x8
   160   000009                     	ds	1
   161   00000A                     MostrarCuentaDisplay@D7Seg:
   162                           	callstack 0
   163                           
   164                           ; 10 bytes @ 0x9
   165   00000A                     	ds	10
   166   000014                     MostrarCuentaDisplay@id:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0x13
   170   000014                     	ds	1
   171   000015                     MostrarCuentaDisplay@dig:
   172                           	callstack 0
   173                           
   174                           ; 1 bytes @ 0x14
   175   000015                     	ds	1
   176   000016                     ??_main:
   177                           
   178                           ; 1 bytes @ 0x15
   179   000016                     	ds	1
   180   000017                     main@ContDisp:
   181                           	callstack 0
   182                           
   183                           ; 1 bytes @ 0x16
   184   000017                     	ds	1
   185   000018                     main@Cont:
   186                           	callstack 0
   187                           
   188                           ; 1 bytes @ 0x17
   189   000018                     	ds	1
   190   000019                     main@IdDisp:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x18
   194   000019                     	ds	1
   195                           
   196 ;;
   197 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   198 ;;
   199 ;; *************** function _main *****************
   200 ;; Defined at:
   201 ;;		line 16 in file "Ejem004.c"
   202 ;; Parameters:    Size  Location     Type
   203 ;;		None
   204 ;; Auto vars:     Size  Location     Type
   205 ;;  IdDisp          1   24[COMRAM] unsigned char 
   206 ;;  Cont            1   23[COMRAM] unsigned char 
   207 ;;  ContDisp        1   22[COMRAM] unsigned char 
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   217 ;;      Params:         0       0       0       0       0       0       0       0       0
   218 ;;      Locals:         3       0       0       0       0       0       0       0       0
   219 ;;      Temps:          1       0       0       0       0       0       0       0       0
   220 ;;      Totals:         4       0       0       0       0       0       0       0       0
   221 ;;Total ram usage:        4 bytes
   222 ;; Hardware stack levels required when called: 2
   223 ;; This function calls:
   224 ;;		_MostrarCuentaDisplay
   225 ;; This function is called by:
   226 ;;		Startup code after reset
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	text0
   231   000976                     __ptext0:
   232                           	callstack 0
   233   000976                     _main:
   234                           	callstack 29
   235   000976                     
   236                           ;Ejem004.c: 18:     uint8_t Cont = 0;
   237   000976  0E00               	movlw	0
   238   000978  6E18               	movwf	main@Cont^0,c
   239                           
   240                           ;Ejem004.c: 19:     uint8_t IdDisp = 1;
   241   00097A  0E01               	movlw	1
   242   00097C  6E19               	movwf	main@IdDisp^0,c
   243                           
   244                           ;Ejem004.c: 20:     uint8_t ContDisp = (500/20);
   245   00097E  0E19               	movlw	25
   246   000980  6E17               	movwf	main@ContDisp^0,c
   247   000982                     
   248                           ;Ejem004.c: 22:     OSCCON &= ~0b01110000;
   249   000982  0E8F               	movlw	143
   250   000984  16D3               	andwf	211,f,c	;volatile
   251   000986                     
   252                           ;Ejem004.c: 23:     OSCCON |= 0b01100000;
   253   000986  0E60               	movlw	96
   254   000988  12D3               	iorwf	211,f,c	;volatile
   255                           
   256                           ;Ejem004.c: 25:     TRISD = 0x00;
   257   00098A  0E00               	movlw	0
   258   00098C  6E95               	movwf	149,c	;volatile
   259   00098E                     
   260                           ;Ejem004.c: 26:     TRISC &= ~0b00110000;
   261   00098E  0ECF               	movlw	207
   262   000990  1694               	andwf	148,f,c	;volatile
   263   000992                     l950:
   264                           
   265                           ;Ejem004.c: 33:       MostrarCuentaDisplay ( IdDisp, Cont);
   266   000992  C018  F009         	movff	main@Cont,MostrarCuentaDisplay@cont
   267   000996  5019               	movf	main@IdDisp^0,w,c
   268   000998  EC01  F005         	call	_MostrarCuentaDisplay
   269   00099C                     
   270                           ;Ejem004.c: 35:       _delay((unsigned long)((20)*(4000000UL/4000.0)));
   271   00099C  0E1A               	movlw	26
   272   00099E  6E16               	movwf	??_main^0,c
   273   0009A0  0EF8               	movlw	248
   274   0009A2                     u337:
   275   0009A2  2EE8               	decfsz	wreg,f,c
   276   0009A4  D7FE               	bra	u337
   277   0009A6  2E16               	decfsz	??_main^0,f,c
   278   0009A8  D7FC               	bra	u337
   279   0009AA  D000               	nop2	
   280   0009AC                     
   281                           ;Ejem004.c: 37:       if(IdDisp==1) IdDisp=0;
   282   0009AC  0419               	decf	main@IdDisp^0,w,c
   283   0009AE  A4D8               	btfss	status,2,c
   284   0009B0  EFDC  F004         	goto	u301
   285   0009B4  EFDE  F004         	goto	u300
   286   0009B8                     u301:
   287   0009B8  EFE2  F004         	goto	l958
   288   0009BC                     u300:
   289   0009BC  0E00               	movlw	0
   290   0009BE  6E19               	movwf	main@IdDisp^0,c
   291   0009C0  EFE4  F004         	goto	l960
   292   0009C4                     l958:
   293   0009C4  0E01               	movlw	1
   294   0009C6  6E19               	movwf	main@IdDisp^0,c
   295   0009C8                     l960:
   296                           
   297                           ;Ejem004.c: 41:       ContDisp--;
   298   0009C8  0617               	decf	main@ContDisp^0,f,c
   299   0009CA                     
   300                           ;Ejem004.c: 42:       if(ContDisp==0){
   301   0009CA  5017               	movf	main@ContDisp^0,w,c
   302   0009CC  A4D8               	btfss	status,2,c
   303   0009CE  EFEB  F004         	goto	u311
   304   0009D2  EFED  F004         	goto	u310
   305   0009D6                     u311:
   306   0009D6  EFC9  F004         	goto	l950
   307   0009DA                     u310:
   308   0009DA                     
   309                           ;Ejem004.c: 43:         ContDisp = (500/20);
   310   0009DA  0E19               	movlw	25
   311   0009DC  6E17               	movwf	main@ContDisp^0,c
   312   0009DE                     
   313                           ;Ejem004.c: 45:         if(Cont==24) Cont = 0;
   314   0009DE  0E18               	movlw	24
   315   0009E0  1818               	xorwf	main@Cont^0,w,c
   316   0009E2  A4D8               	btfss	status,2,c
   317   0009E4  EFF6  F004         	goto	u321
   318   0009E8  EFF8  F004         	goto	u320
   319   0009EC                     u321:
   320   0009EC  EFFC  F004         	goto	l970
   321   0009F0                     u320:
   322   0009F0  0E00               	movlw	0
   323   0009F2  6E18               	movwf	main@Cont^0,c
   324   0009F4  EFC9  F004         	goto	l950
   325   0009F8                     l970:
   326   0009F8  2A18               	incf	main@Cont^0,f,c
   327   0009FA  EFC9  F004         	goto	l950
   328   0009FE  EF00  F000         	goto	start
   329   000A02                     __end_of_main:
   330                           	callstack 0
   331                           
   332 ;; *************** function _MostrarCuentaDisplay *****************
   333 ;; Defined at:
   334 ;;		line 52 in file "Ejem004.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;  id              1    wreg     unsigned char 
   337 ;;  cont            1    8[COMRAM] unsigned char 
   338 ;; Auto vars:     Size  Location     Type
   339 ;;  id              1   19[COMRAM] unsigned char 
   340 ;;  D7Seg          10    9[COMRAM] unsigned char [10]
   341 ;;  dig             1   20[COMRAM] unsigned char 
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   351 ;;      Params:         1       0       0       0       0       0       0       0       0
   352 ;;      Locals:        12       0       0       0       0       0       0       0       0
   353 ;;      Temps:          0       0       0       0       0       0       0       0       0
   354 ;;      Totals:        13       0       0       0       0       0       0       0       0
   355 ;;Total ram usage:       13 bytes
   356 ;; Hardware stack levels used: 1
   357 ;; Hardware stack levels required when called: 1
   358 ;; This function calls:
   359 ;;		___awdiv
   360 ;;		___awmod
   361 ;; This function is called by:
   362 ;;		_main
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           	psect	text1
   367   000A02                     __ptext1:
   368                           	callstack 0
   369   000A02                     _MostrarCuentaDisplay:
   370                           	callstack 29
   371                           
   372                           ;incstack = 0
   373                           ;MostrarCuentaDisplay@id stored from wreg
   374   000A02  6E14               	movwf	MostrarCuentaDisplay@id^0,c
   375   000A04                     
   376                           ;Ejem004.c: 54:     uint8_t dig;;Ejem004.c: 55:     uint8_t D7Seg[] = {0x3F, 0x06, 0x5B,
      +                           0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x67};
   377   000A04  EE20  F01A         	lfsr	2,MostrarCuentaDisplay@F3225
   378   000A08  EE10  F00A         	lfsr	1,MostrarCuentaDisplay@D7Seg
   379   000A0C  0E09               	movlw	9
   380   000A0E                     u291:
   381   000A0E  CFDB FFE3          	movff	plusw2,plusw1
   382   000A12  06E8               	decf	wreg,f,c
   383   000A14  E2FC               	bc	u291
   384   000A16                     
   385                           ;Ejem004.c: 58:     LATC &= ~0b00110000;
   386   000A16  0ECF               	movlw	207
   387   000A18  168B               	andwf	139,f,c	;volatile
   388                           
   389                           ;Ejem004.c: 60:     switch ( id ){
   390   000A1A  EF37  F005         	goto	l940
   391   000A1E                     l926:
   392                           
   393                           ;Ejem004.c: 62:             dig = cont / 10;
   394   000A1E  C009  F001         	movff	MostrarCuentaDisplay@cont,___awdiv@dividend
   395   000A22  6A02               	clrf	(___awdiv@dividend+1)^0,c
   396   000A24  0E00               	movlw	0
   397   000A26  6E04               	movwf	(___awdiv@divisor+1)^0,c
   398   000A28  0E0A               	movlw	10
   399   000A2A  6E03               	movwf	___awdiv@divisor^0,c
   400   000A2C  EC01  F004         	call	___awdiv	;wreg free
   401   000A30  5001               	movf	?___awdiv^0,w,c
   402   000A32  6E15               	movwf	MostrarCuentaDisplay@dig^0,c
   403   000A34                     
   404                           ;Ejem004.c: 63:             LATD = D7Seg[ dig ];
   405   000A34  5015               	movf	MostrarCuentaDisplay@dig^0,w,c
   406   000A36  0F0A               	addlw	low MostrarCuentaDisplay@D7Seg
   407   000A38  6ED9               	movwf	fsr2l,c
   408   000A3A  6ADA               	clrf	fsr2h,c
   409   000A3C  50DF               	movf	indf2,w,c
   410   000A3E  6E8C               	movwf	140,c	;volatile
   411   000A40                     
   412                           ;Ejem004.c: 64:             LATC |= 0b00100000;
   413   000A40  8A8B               	bsf	139,5,c	;volatile
   414                           
   415                           ;Ejem004.c: 65:             break;
   416   000A42  EF42  F005         	goto	l36
   417   000A46                     l932:
   418                           
   419                           ;Ejem004.c: 67:             dig = cont % 10;
   420   000A46  C009  F001         	movff	MostrarCuentaDisplay@cont,___awmod@dividend
   421   000A4A  6A02               	clrf	(___awmod@dividend+1)^0,c
   422   000A4C  0E00               	movlw	0
   423   000A4E  6E04               	movwf	(___awmod@divisor+1)^0,c
   424   000A50  0E0A               	movlw	10
   425   000A52  6E03               	movwf	___awmod@divisor^0,c
   426   000A54  EC63  F004         	call	___awmod	;wreg free
   427   000A58  5001               	movf	?___awmod^0,w,c
   428   000A5A  6E15               	movwf	MostrarCuentaDisplay@dig^0,c
   429   000A5C                     
   430                           ;Ejem004.c: 68:             LATD = D7Seg[ dig ];
   431   000A5C  5015               	movf	MostrarCuentaDisplay@dig^0,w,c
   432   000A5E  0F0A               	addlw	low MostrarCuentaDisplay@D7Seg
   433   000A60  6ED9               	movwf	fsr2l,c
   434   000A62  6ADA               	clrf	fsr2h,c
   435   000A64  50DF               	movf	indf2,w,c
   436   000A66  6E8C               	movwf	140,c	;volatile
   437   000A68                     
   438                           ;Ejem004.c: 69:             LATC |= 0b00010000;
   439   000A68  888B               	bsf	139,4,c	;volatile
   440                           
   441                           ;Ejem004.c: 70:             break;
   442   000A6A  EF42  F005         	goto	l36
   443   000A6E                     l940:
   444   000A6E  5014               	movf	MostrarCuentaDisplay@id^0,w,c
   445                           
   446                           ; Switch size 1, requested type "simple"
   447                           ; Number of cases is 2, Range of values is 0 to 1
   448                           ; switch strategies available:
   449                           ; Name         Instructions Cycles
   450                           ; simple_byte            7     4 (average)
   451                           ;	Chosen strategy is simple_byte
   452   000A70  0A00               	xorlw	0	; case 0
   453   000A72  B4D8               	btfsc	status,2,c
   454   000A74  EF23  F005         	goto	l932
   455   000A78  0A01               	xorlw	1	; case 1
   456   000A7A  B4D8               	btfsc	status,2,c
   457   000A7C  EF0F  F005         	goto	l926
   458   000A80  EF42  F005         	goto	l36
   459   000A84                     l36:
   460   000A84  0012               	return		;funcret
   461   000A86                     __end_of_MostrarCuentaDisplay:
   462                           	callstack 0
   463                           
   464 ;; *************** function ___awmod *****************
   465 ;; Defined at:
   466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  dividend        2    0[COMRAM] int 
   469 ;;  divisor         2    2[COMRAM] int 
   470 ;; Auto vars:     Size  Location     Type
   471 ;;  sign            1    5[COMRAM] unsigned char 
   472 ;;  counter         1    4[COMRAM] unsigned char 
   473 ;; Return value:  Size  Location     Type
   474 ;;                  2    0[COMRAM] int 
   475 ;; Registers used:
   476 ;;		wreg, status,2, status,0
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   482 ;;      Params:         4       0       0       0       0       0       0       0       0
   483 ;;      Locals:         2       0       0       0       0       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0       0       0       0       0
   485 ;;      Totals:         6       0       0       0       0       0       0       0       0
   486 ;;Total ram usage:        6 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_MostrarCuentaDisplay
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text2
   496   0008C6                     __ptext2:
   497                           	callstack 0
   498   0008C6                     ___awmod:
   499                           	callstack 29
   500   0008C6  0E00               	movlw	0
   501   0008C8  6E06               	movwf	___awmod@sign^0,c
   502   0008CA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   503   0008CC  EF6C  F004         	goto	u230
   504   0008D0  EF6A  F004         	goto	u231
   505   0008D4                     u231:
   506   0008D4  EF72  F004         	goto	l894
   507   0008D8                     u230:
   508   0008D8  6C01               	negf	___awmod@dividend^0,c
   509   0008DA  1E02               	comf	(___awmod@dividend+1)^0,f,c
   510   0008DC  B0D8               	btfsc	status,0,c
   511   0008DE  2A02               	incf	(___awmod@dividend+1)^0,f,c
   512   0008E0  0E01               	movlw	1
   513   0008E2  6E06               	movwf	___awmod@sign^0,c
   514   0008E4                     l894:
   515   0008E4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   516   0008E6  EF79  F004         	goto	u240
   517   0008EA  EF77  F004         	goto	u241
   518   0008EE                     u241:
   519   0008EE  EF7D  F004         	goto	l898
   520   0008F2                     u240:
   521   0008F2  6C03               	negf	___awmod@divisor^0,c
   522   0008F4  1E04               	comf	(___awmod@divisor+1)^0,f,c
   523   0008F6  B0D8               	btfsc	status,0,c
   524   0008F8  2A04               	incf	(___awmod@divisor+1)^0,f,c
   525   0008FA                     l898:
   526   0008FA  5003               	movf	___awmod@divisor^0,w,c
   527   0008FC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   528   0008FE  B4D8               	btfsc	status,2,c
   529   000900  EF84  F004         	goto	u251
   530   000904  EF86  F004         	goto	u250
   531   000908                     u251:
   532   000908  EFAA  F004         	goto	l914
   533   00090C                     u250:
   534   00090C  0E01               	movlw	1
   535   00090E  6E05               	movwf	___awmod@counter^0,c
   536   000910  EF8E  F004         	goto	l904
   537   000914                     l902:
   538   000914  90D8               	bcf	status,0,c
   539   000916  3603               	rlcf	___awmod@divisor^0,f,c
   540   000918  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   541   00091A  2A05               	incf	___awmod@counter^0,f,c
   542   00091C                     l904:
   543   00091C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   544   00091E  EF93  F004         	goto	u261
   545   000922  EF95  F004         	goto	u260
   546   000926                     u261:
   547   000926  EF8A  F004         	goto	l902
   548   00092A                     u260:
   549   00092A                     l906:
   550   00092A  5003               	movf	___awmod@divisor^0,w,c
   551   00092C  5C01               	subwf	___awmod@dividend^0,w,c
   552   00092E  5004               	movf	(___awmod@divisor+1)^0,w,c
   553   000930  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   554   000932  A0D8               	btfss	status,0,c
   555   000934  EF9E  F004         	goto	u271
   556   000938  EFA0  F004         	goto	u270
   557   00093C                     u271:
   558   00093C  EFA4  F004         	goto	l910
   559   000940                     u270:
   560   000940  5003               	movf	___awmod@divisor^0,w,c
   561   000942  5E01               	subwf	___awmod@dividend^0,f,c
   562   000944  5004               	movf	(___awmod@divisor+1)^0,w,c
   563   000946  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   564   000948                     l910:
   565   000948  90D8               	bcf	status,0,c
   566   00094A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   567   00094C  3203               	rrcf	___awmod@divisor^0,f,c
   568   00094E  2E05               	decfsz	___awmod@counter^0,f,c
   569   000950  EF95  F004         	goto	l906
   570   000954                     l914:
   571   000954  5006               	movf	___awmod@sign^0,w,c
   572   000956  B4D8               	btfsc	status,2,c
   573   000958  EFB0  F004         	goto	u281
   574   00095C  EFB2  F004         	goto	u280
   575   000960                     u281:
   576   000960  EFB6  F004         	goto	l918
   577   000964                     u280:
   578   000964  6C01               	negf	___awmod@dividend^0,c
   579   000966  1E02               	comf	(___awmod@dividend+1)^0,f,c
   580   000968  B0D8               	btfsc	status,0,c
   581   00096A  2A02               	incf	(___awmod@dividend+1)^0,f,c
   582   00096C                     l918:
   583   00096C  C001  F001         	movff	___awmod@dividend,?___awmod
   584   000970  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   585   000974  0012               	return		;funcret
   586   000976                     __end_of___awmod:
   587                           	callstack 0
   588                           
   589 ;; *************** function ___awdiv *****************
   590 ;; Defined at:
   591 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  dividend        2    0[COMRAM] int 
   594 ;;  divisor         2    2[COMRAM] int 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  quotient        2    6[COMRAM] int 
   597 ;;  sign            1    5[COMRAM] unsigned char 
   598 ;;  counter         1    4[COMRAM] unsigned char 
   599 ;; Return value:  Size  Location     Type
   600 ;;                  2    0[COMRAM] int 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   608 ;;      Params:         4       0       0       0       0       0       0       0       0
   609 ;;      Locals:         4       0       0       0       0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0       0       0       0       0
   611 ;;      Totals:         8       0       0       0       0       0       0       0       0
   612 ;;Total ram usage:        8 bytes
   613 ;; Hardware stack levels used: 1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_MostrarCuentaDisplay
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text3
   622   000802                     __ptext3:
   623                           	callstack 0
   624   000802                     ___awdiv:
   625                           	callstack 29
   626   000802  0E00               	movlw	0
   627   000804  6E06               	movwf	___awdiv@sign^0,c
   628   000806  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   629   000808  EF0A  F004         	goto	u170
   630   00080C  EF08  F004         	goto	u171
   631   000810                     u171:
   632   000810  EF10  F004         	goto	l850
   633   000814                     u170:
   634   000814  6C03               	negf	___awdiv@divisor^0,c
   635   000816  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   636   000818  B0D8               	btfsc	status,0,c
   637   00081A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   638   00081C  0E01               	movlw	1
   639   00081E  6E06               	movwf	___awdiv@sign^0,c
   640   000820                     l850:
   641   000820  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   642   000822  EF17  F004         	goto	u180
   643   000826  EF15  F004         	goto	u181
   644   00082A                     u181:
   645   00082A  EF1D  F004         	goto	l856
   646   00082E                     u180:
   647   00082E  6C01               	negf	___awdiv@dividend^0,c
   648   000830  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   649   000832  B0D8               	btfsc	status,0,c
   650   000834  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   651   000836  0E01               	movlw	1
   652   000838  1A06               	xorwf	___awdiv@sign^0,f,c
   653   00083A                     l856:
   654   00083A  0E00               	movlw	0
   655   00083C  6E08               	movwf	(___awdiv@quotient+1)^0,c
   656   00083E  0E00               	movlw	0
   657   000840  6E07               	movwf	___awdiv@quotient^0,c
   658   000842  5003               	movf	___awdiv@divisor^0,w,c
   659   000844  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   660   000846  B4D8               	btfsc	status,2,c
   661   000848  EF28  F004         	goto	u191
   662   00084C  EF2A  F004         	goto	u190
   663   000850                     u191:
   664   000850  EF52  F004         	goto	l878
   665   000854                     u190:
   666   000854  0E01               	movlw	1
   667   000856  6E05               	movwf	___awdiv@counter^0,c
   668   000858  EF32  F004         	goto	l864
   669   00085C                     l862:
   670   00085C  90D8               	bcf	status,0,c
   671   00085E  3603               	rlcf	___awdiv@divisor^0,f,c
   672   000860  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   673   000862  2A05               	incf	___awdiv@counter^0,f,c
   674   000864                     l864:
   675   000864  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   676   000866  EF37  F004         	goto	u201
   677   00086A  EF39  F004         	goto	u200
   678   00086E                     u201:
   679   00086E  EF2E  F004         	goto	l862
   680   000872                     u200:
   681   000872                     l866:
   682   000872  90D8               	bcf	status,0,c
   683   000874  3607               	rlcf	___awdiv@quotient^0,f,c
   684   000876  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   685   000878  5003               	movf	___awdiv@divisor^0,w,c
   686   00087A  5C01               	subwf	___awdiv@dividend^0,w,c
   687   00087C  5004               	movf	(___awdiv@divisor+1)^0,w,c
   688   00087E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   689   000880  A0D8               	btfss	status,0,c
   690   000882  EF45  F004         	goto	u211
   691   000886  EF47  F004         	goto	u210
   692   00088A                     u211:
   693   00088A  EF4C  F004         	goto	l874
   694   00088E                     u210:
   695   00088E  5003               	movf	___awdiv@divisor^0,w,c
   696   000890  5E01               	subwf	___awdiv@dividend^0,f,c
   697   000892  5004               	movf	(___awdiv@divisor+1)^0,w,c
   698   000894  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   699   000896  8007               	bsf	___awdiv@quotient^0,0,c
   700   000898                     l874:
   701   000898  90D8               	bcf	status,0,c
   702   00089A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   703   00089C  3203               	rrcf	___awdiv@divisor^0,f,c
   704   00089E  2E05               	decfsz	___awdiv@counter^0,f,c
   705   0008A0  EF39  F004         	goto	l866
   706   0008A4                     l878:
   707   0008A4  5006               	movf	___awdiv@sign^0,w,c
   708   0008A6  B4D8               	btfsc	status,2,c
   709   0008A8  EF58  F004         	goto	u221
   710   0008AC  EF5A  F004         	goto	u220
   711   0008B0                     u221:
   712   0008B0  EF5E  F004         	goto	l882
   713   0008B4                     u220:
   714   0008B4  6C07               	negf	___awdiv@quotient^0,c
   715   0008B6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   716   0008B8  B0D8               	btfsc	status,0,c
   717   0008BA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   718   0008BC                     l882:
   719   0008BC  C007  F001         	movff	___awdiv@quotient,?___awdiv
   720   0008C0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   721   0008C4  0012               	return		;funcret
   722   0008C6                     __end_of___awdiv:
   723                           	callstack 0
   724                           
   725                           	psect	smallconst
   726   000800                     __psmallconst:
   727                           	callstack 0
   728   000800  00                 	db	0
   729   000801  00                 	db	0	; dummy byte at the end
   730   000000                     
   731                           	psect	rparam
   732   000000                     
   733                           	psect	config
   734                           
   735                           ;Config register CONFIG1L @ 0x300000
   736                           ;	PLL Prescaler Selection bits
   737                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   738                           ;	System Clock Postscaler Selection bits
   739                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   740                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   741                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   742   300000                     	org	3145728
   743   300000  00                 	db	0
   744                           
   745                           ;Config register CONFIG1H @ 0x300001
   746                           ;	Oscillator Selection bits
   747                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
   748                           ;	Fail-Safe Clock Monitor Enable bit
   749                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   750                           ;	Internal/External Oscillator Switchover bit
   751                           ;	IESO = OFF, Oscillator Switchover mode disabled
   752   300001                     	org	3145729
   753   300001  08                 	db	8
   754                           
   755                           ;Config register CONFIG2L @ 0x300002
   756                           ;	Power-up Timer Enable bit
   757                           ;	PWRT = ON, PWRT enabled
   758                           ;	Brown-out Reset Enable bits
   759                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   760                           ;	Brown-out Reset Voltage bits
   761                           ;	BORV = 3, Minimum setting 2.05V
   762                           ;	USB Voltage Regulator Enable bit
   763                           ;	VREGEN = OFF, USB voltage regulator disabled
   764   300002                     	org	3145730
   765   300002  18                 	db	24
   766                           
   767                           ;Config register CONFIG2H @ 0x300003
   768                           ;	Watchdog Timer Enable bit
   769                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   770                           ;	Watchdog Timer Postscale Select bits
   771                           ;	WDTPS = 32768, 1:32768
   772   300003                     	org	3145731
   773   300003  1E                 	db	30
   774                           
   775                           ; Padding undefined space
   776   300004                     	org	3145732
   777   300004  FF                 	db	255
   778                           
   779                           ;Config register CONFIG3H @ 0x300005
   780                           ;	CCP2 MUX bit
   781                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   782                           ;	PORTB A/D Enable bit
   783                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   784                           ;	Low-Power Timer 1 Oscillator Enable bit
   785                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   786                           ;	MCLR Pin Enable bit
   787                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   788   300005                     	org	3145733
   789   300005  01                 	db	1
   790                           
   791                           ;Config register CONFIG4L @ 0x300006
   792                           ;	Stack Full/Underflow Reset Enable bit
   793                           ;	STVREN = ON, Stack full/underflow will cause Reset
   794                           ;	Single-Supply ICSP Enable bit
   795                           ;	LVP = ON, Single-Supply ICSP enabled
   796                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   797                           ;	ICPRT = OFF, ICPORT disabled
   798                           ;	Extended Instruction Set Enable bit
   799                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   800                           ;	Background Debugger Enable bit
   801                           ;	DEBUG = 0x1, unprogrammed default
   802   300006                     	org	3145734
   803   300006  85                 	db	133
   804                           
   805                           ; Padding undefined space
   806   300007                     	org	3145735
   807   300007  FF                 	db	255
   808                           
   809                           ;Config register CONFIG5L @ 0x300008
   810                           ;	Code Protection bit
   811                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   812                           ;	Code Protection bit
   813                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   814                           ;	Code Protection bit
   815                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   816                           ;	Code Protection bit
   817                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   818   300008                     	org	3145736
   819   300008  0F                 	db	15
   820                           
   821                           ;Config register CONFIG5H @ 0x300009
   822                           ;	Boot Block Code Protection bit
   823                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   824                           ;	Data EEPROM Code Protection bit
   825                           ;	CPD = OFF, Data EEPROM is not code-protected
   826   300009                     	org	3145737
   827   300009  C0                 	db	192
   828                           
   829                           ;Config register CONFIG6L @ 0x30000A
   830                           ;	Write Protection bit
   831                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   832                           ;	Write Protection bit
   833                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   834                           ;	Write Protection bit
   835                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   836                           ;	Write Protection bit
   837                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   838   30000A                     	org	3145738
   839   30000A  0F                 	db	15
   840                           
   841                           ;Config register CONFIG6H @ 0x30000B
   842                           ;	Configuration Register Write Protection bit
   843                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   844                           ;	Boot Block Write Protection bit
   845                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   846                           ;	Data EEPROM Write Protection bit
   847                           ;	WRTD = OFF, Data EEPROM is not write-protected
   848   30000B                     	org	3145739
   849   30000B  E0                 	db	224
   850                           
   851                           ;Config register CONFIG7L @ 0x30000C
   852                           ;	Table Read Protection bit
   853                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   854                           ;	Table Read Protection bit
   855                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   856                           ;	Table Read Protection bit
   857                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   858                           ;	Table Read Protection bit
   859                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   860   30000C                     	org	3145740
   861   30000C  0F                 	db	15
   862                           
   863                           ;Config register CONFIG7H @ 0x30000D
   864                           ;	Boot Block Table Read Protection bit
   865                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   866   30000D                     	org	3145741
   867   30000D  40                 	db	64
   868                           tosu	equ	0xFFF
   869                           tosh	equ	0xFFE
   870                           tosl	equ	0xFFD
   871                           stkptr	equ	0xFFC
   872                           pclatu	equ	0xFFB
   873                           pclath	equ	0xFFA
   874                           pcl	equ	0xFF9
   875                           tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           prodh	equ	0xFF4
   880                           prodl	equ	0xFF3
   881                           indf0	equ	0xFEF
   882                           postinc0	equ	0xFEE
   883                           postdec0	equ	0xFED
   884                           preinc0	equ	0xFEC
   885                           plusw0	equ	0xFEB
   886                           fsr0h	equ	0xFEA
   887                           fsr0l	equ	0xFE9
   888                           wreg	equ	0xFE8
   889                           indf1	equ	0xFE7
   890                           postinc1	equ	0xFE6
   891                           postdec1	equ	0xFE5
   892                           preinc1	equ	0xFE4
   893                           plusw1	equ	0xFE3
   894                           fsr1h	equ	0xFE2
   895                           fsr1l	equ	0xFE1
   896                           bsr	equ	0xFE0
   897                           indf2	equ	0xFDF
   898                           postinc2	equ	0xFDE
   899                           postdec2	equ	0xFDD
   900                           preinc2	equ	0xFDC
   901                           plusw2	equ	0xFDB
   902                           fsr2h	equ	0xFDA
   903                           fsr2l	equ	0xFD9
   904                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_MostrarCuentaDisplay
    _MostrarCuentaDisplay->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1254
                                             21 COMRAM     4     4      0
               _MostrarCuentaDisplay
 ---------------------------------------------------------------------------------
 (1) _MostrarCuentaDisplay                                13    12      1    1135
                                              8 COMRAM    13    12      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MostrarCuentaDisplay
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     19      23       1       36.8%
BITBIGSFRlh         3D      0       0      21        0.0%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRlll        2B      0       0      23        0.0%
BITBIGSFRllh         7      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      24        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 24 16:07:57 2024

                          l36 0A84                  ___awdiv@sign 0006                  main@ContDisp 0017  
                         l270 08C4                           l283 0974                           l900 090C  
                         l910 0948                           l902 0914                           l912 094E  
                         l904 091C                           l850 0820                           l842 0802  
                         l906 092A                           l914 0954                           l930 0A40  
                         l922 0A04                           l860 0854                           l852 082E  
                         l844 0806                           l916 0964                           l908 0940  
                         l932 0A46                           l940 0A6E                           l924 0A16  
                         l870 088E                           l862 085C                           l854 0836  
                         l846 0814                           l918 096C                           l934 0A5C  
                         l926 0A1E                           l950 0992                           l942 0976  
                         l880 08B4                           l872 0896                           l864 0864  
                         l856 083A                           l848 081C                           l936 0A68  
                         l928 0A34                           l960 09C8                           l952 099C  
                         l944 0982                           l882 08BC                           l874 0898  
                         l866 0872                           l858 0842                           l890 08D8  
                         l970 09F8                           l962 09CA                           l954 09AC  
                         l946 0986                           l876 089E                           l868 0878  
                         l892 08E0                           l964 09DA                           l956 09BC  
                         l948 098E                           l878 08A4                           l894 08E4  
                         l886 08C6                           l966 09DE                           l958 09C4  
                         l896 08F2                           l888 08CA                           l968 09F0  
                         l898 08FA                           u200 0872                           u201 086E  
                         u210 088E                           u211 088A                           u220 08B4  
                         u300 09BC                           u221 08B0                           u301 09B8  
                         u230 08D8                           u310 09DA                           u231 08D4  
                         u311 09D6                           u240 08F2                           u320 09F0  
                         u241 08EE                           u321 09EC                           u170 0814  
                         u250 090C                           u171 0810                           u251 0908  
                         u180 082E                           u260 092A                           u181 082A  
                         u261 0926                           u190 0854                           u270 0940  
                         u191 0850                           u271 093C                           u280 0964  
                         u281 0960                           u337 09A2                           u291 0A0E  
                ___awmod@sign 0006                           wreg 0FE8                          _LATC 0F8B  
                        _LATD 0F8C                          _main 0976                          fsr2h 0FDA  
                        indf2 0FDF                          fsr1l 0FE1                          fsr2l 0FD9  
                        start 0000                  ___param_bank 0000                         ?_main 0001  
             __end_of___awdiv 08C6               __end_of___awmod 0976               ___awdiv@divisor 0003  
             ___awdiv@counter 0005                         _TRISC 0F94                         _TRISD 0F95  
     MostrarCuentaDisplay@dig 0015                         tablat 0FF5                         plusw1 0FE3  
                       plusw2 0FDB                         status 0FD8               __initialization 0A86  
                __end_of_main 0A02                        ??_main 0016                 __activetblptr 0002  
            ___awdiv@dividend 0001                        _OSCCON 0FD3      MostrarCuentaDisplay@cont 0009  
                   ??___awdiv 0005                     ??___awmod 0005              ___awdiv@quotient 0007  
             ___awmod@divisor 0003                        isa$std 0001               ___awmod@counter 0005  
                __pdataCOMRAM 001A                  __mediumconst 0000                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8  __end_of_MostrarCuentaDisplay 0A86  
                  __accesstop 0060       __end_of__initialization 0AA6                 ___rparam_used 0001  
              __pcstackCOMRAM 0001                       __Hparam 0000                       __Lparam 0000  
                     ___awdiv 0802                       ___awmod 08C6          _MostrarCuentaDisplay 0A02  
                __psmallconst 0800                       __pcinit 0A86                       __ramtop 0800  
                     __ptext0 0976                       __ptext1 0A02                       __ptext2 08C6  
                     __ptext3 0802              ___awmod@dividend 0001          end_of_initialization 0AA6  
               __Lmediumconst 0000                       postdec1 0FE5         ?_MostrarCuentaDisplay 0009  
                     postinc0 0FEE                    main@IdDisp 0019        MostrarCuentaDisplay@id 0014  
               __pidataCOMRAM 0AB0           start_initialization 0A86        ??_MostrarCuentaDisplay 000A  
                    ?___awdiv 0001                      ?___awmod 0001                   __smallconst 0800  
                   copy_data0 0A9A                      __Hrparam 0000                      __Lrparam 0000  
                    isa$xinst 0000                      main@Cont 0018     MostrarCuentaDisplay@F3225 001A  
   MostrarCuentaDisplay@D7Seg 000A  
